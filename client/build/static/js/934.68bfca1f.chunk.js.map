{"version":3,"file":"static/js/934.68bfca1f.chunk.js","mappings":"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","sources":["Components/Category/CommonFilter.jsx","Components/Category/Men/MenProduct.jsx","Components/Category/Men/Men.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { UserContext } from '../../Context/UserContext';\r\n\r\nfunction CommonFilter() {\r\n  const [CategoryShow, setCategoryShow] = useState(false);\r\n  const [TypeShow, setTypeShow] = useState(false);\r\n  const [SizeShow, setSizeShow] = useState(false);\r\n  const [ColorShow, setColorShow] = useState(false);\r\n  const Category = ['shirt', 'pants', 'jeans', 'underwear', 'Category 5'];\r\n  const Type = ['Type 1', 'Type 2', 'Type 3', 'Type 4', 'Type 5'];\r\n  const Size = ['SM', 'MD', 'LG', 'XL', 'XXL'];\r\n  const Color = ['Red', 'Green', 'Blue', 'Black', 'Orange'];\r\n  const Brands = ['Zara', \"levi's\", 'Outfitter', 'Breakout'];\r\n  const [selectedType, setSelectedType] = useState('Type');\r\n  const [selectedColor, setSelectedColor] = useState('Color');\r\n  const [selectedSize, setSelectedSize] = useState('Size');\r\n\r\n  const { filter, Setfilter } = useContext(UserContext);\r\n\r\n  const handleCategorySelect = (item) => {\r\n    Setfilter({ ...filter, category: item });\r\n    setCategoryShow(false);\r\n  };\r\n\r\n  const handleBrandSelect = (brand) => {\r\n    let updatedBrand = [...filter.brand];\r\n    if (updatedBrand.includes(brand)) {\r\n      updatedBrand = updatedBrand.filter((b) => b !== brand);\r\n    } else {\r\n      updatedBrand.push(brand);\r\n    }\r\n    Setfilter({ ...filter, brand: updatedBrand });\r\n  };\r\n  return (\r\n    <div className='mx-3.5 w-96 border border-gray-400 h-auto mt-20 flex flex-col px-5 py-5 lg:mt-10 lg:ml-16 lg:w-[355px]'>\r\n      <div>\r\n        {/* Category Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{filter.category || 'Category'}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setCategoryShow(!CategoryShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          CategoryShow && <div className='z-50 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Category.map((categoryItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => handleCategorySelect(categoryItem)} key={i}>\r\n                  {categoryItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n        {/* Type Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{selectedType}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setTypeShow(!TypeShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          TypeShow && <div className='inset-0 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Type.map((typeItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => {\r\n                    setSelectedType(typeItem);\r\n                    setTypeShow(!TypeShow);\r\n                  }} key={i}>\r\n                  {typeItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n        {/* Size Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{selectedSize}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setSizeShow(!SizeShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          SizeShow && <div className='inset-0 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Size.map((sizeItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => {\r\n                    setSelectedSize(sizeItem);\r\n                    setSizeShow(!SizeShow);\r\n                  }} key={i}>\r\n                  {sizeItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n        {/* Color Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{selectedColor}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setColorShow(!ColorShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          ColorShow && <div className='inset-0 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Color.map((colorItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => {\r\n                    setSelectedColor(colorItem);\r\n                    setColorShow(!ColorShow);\r\n                  }} key={i}>\r\n                  {colorItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n      {/* Filter By Genres Section */}\r\n      <div className=\"my-6\">\r\n        <h1 className='text-start font-medium'>Filter By Genres</h1>\r\n        <div className=\"flex flex-col space-y-4 mt-6 ml-3\">\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox1\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox1\" className=\"ml-2 font-normal text-gray-700\">\r\n              History\r\n            </label>\r\n          </div>\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox2\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox2\" className=\"ml-2 font-normal text-gray-700\">\r\n              Horror\r\n            </label>\r\n          </div>\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox3\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox3\" className=\"ml-2 text-gray-700\">\r\n              Biography\r\n            </label>\r\n          </div>\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox4\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox4\" className=\"ml-2 text-gray-700\">\r\n              Science Fiction\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Filter By Brands Section */}\r\n      <div className=\"my-6\">\r\n        <h1 className='text-start font-medium'>Filter By Brands</h1>\r\n        <div className=\"flex flex-col space-y-4 mt-6 ml-3\">\r\n          {\r\n            Brands.map((brand, i) => (\r\n              <div className=\"flex items-center my-1\" key={i}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={`brandCheckbox${i}`}\r\n                  className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n                  checked={filter.brand.includes(brand)}  // Ensure checkbox state is controlled\r\n                  onChange={() =>{ \r\n                    handleBrandSelect(brand)\r\n\r\n                  }}\r\n                />\r\n                <label htmlFor={`brandCheckbox${i}`} className=\"ml-2 font-normal text-gray-700\">\r\n                  {brand}\r\n                </label>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommonFilter;\r\n","import React, { useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCartShopping, faMagnifyingGlassPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport {useMutation} from '@tanstack/react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../../../Context/UserContext'\r\nfunction MenProduct({product}) {\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n  const {User} = useContext(UserContext)\r\n  let CartData = {\r\n    userid:User._id,\r\n    productid:product._id\r\n  }\r\n  const UserCartApi = async (CartData)=>{\r\n    let response = await fetch(`${API_BASE_URL}/user/cart`,{\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(CartData)\r\n    })\r\n    return response.json()\r\n  }\r\n  const UserCartMutation = useMutation({\r\n    mutationFn:UserCartApi,\r\n    onSuccess:()=>{\r\n      console.log('Product added')\r\n    },\r\n    onError:()=>{\r\n      console.log('Some error occured in adding the product')\r\n    }\r\n  })\r\n  let discountedPrice = (product.discount/100)*product.price\r\n  let  ActualPriceAfterDiscount = Math.floor(product.price - discountedPrice)\r\n  return (\r\n    <Link to = {`/detail/${product._id}`}>\r\n    <div className='mt-10 relative group mx-2.5  cursor-pointer'>\r\n    <img src={`${API_BASE_URL}${product.images[0]}`} alt=\"\"  className='h-72 w-64' />\r\n    {\r\n      product.discount>0 ?\r\n      <div className='w-10 h-10 bg-primary text-white rounded-full text-sm absolute left-52 top-1'>\r\n       {product.discount}% off\r\n    </div>\r\n       : \"\"\r\n    }\r\n    <div className='bg-white mx-11 text-black absolute p-2.5 w-40 text-xl justify-around bottom-24 flex opacity-0 group-hover:opacity-100 transition-opacity duration-300 '>\r\n        <FontAwesomeIcon icon={faCartShopping}\r\n        onClick={()=>{\r\n          UserCartMutation.mutate(CartData)\r\n        }} \r\n         />\r\n        <FontAwesomeIcon icon={faHeart} />\r\n        <FontAwesomeIcon icon={faMagnifyingGlassPlus} />\r\n    </div>\r\n    <p className='text-lg m-2 hover:text-primary'>{product.name}</p>\r\n    <div className='flex justify-around items-center w-24 ml-20'>\r\n      {\r\n        product.discount > 0 ? (\r\n          <>\r\n          <p>$ {ActualPriceAfterDiscount}</p>\r\n          <p className='line-through text-neutral-500'>$ {product.price}</p>\r\n          </>\r\n        ) : <p className='text-lg hover:'>$ {product.price}.00</p>\r\n      }\r\n    </div>\r\n    </div>\r\n    </Link>\r\n    \r\n  )\r\n}\r\n\r\nexport default MenProduct","import React, { useContext } from 'react'\r\nimport Header from '../../Header/Header'\r\nimport CommonCategoryPage from '../CommonCategoryPage'\r\nimport CommonFilter from '../CommonFilter'\r\nimport Footer from '../../Footer/Footer'\r\nimport {useQuery} from '@tanstack/react-query'\r\nimport MenProduct from './MenProduct'\r\nimport { UserContext } from '../../../Context/UserContext'\r\nfunction Men() {\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n  const {filter} = useContext(UserContext)\r\n  const {data,isLoading,error} = useQuery({\r\n    queryKey:['product',filter],\r\n    queryFn:async ()=>{\r\n      let query = ''\r\n      if(filter.category){\r\n        query+=`?category=${filter.category}`\r\n      }\r\n      if (filter.brand.length > 0) {\r\n        const brandQuery = filter.brand.map((brand) => `brand=${encodeURIComponent(brand)}`).join('&');\r\n        query += query ? `&${brandQuery}` : `?${brandQuery}`;\r\n      }\r\n      let response = await fetch(`${API_BASE_URL}/user/men${query}`,{\r\n        method: 'Get'\r\n      })\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    }\r\n    \r\n  })\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  const AllProducts =data.Products\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        <CommonCategoryPage data={'Men'}/>\r\n        <div className='lg:flex'>\r\n        <CommonFilter/>\r\n        <div className='flex flex-col lg:flex-row py-8 justify-center items-center\r\n         lg:py-0 lg:justify-center lg:gap-3 lg:items-start lg:flex-wrap'>\r\n        {\r\n          AllProducts && AllProducts.length > 0?AllProducts.map((data,i)=>{\r\n            return(\r\n              <MenProduct product = {data}/>\r\n            )\r\n          }):\"No data is availabe\"\r\n        }\r\n        </div>\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Men"],"names":["CategoryShow","setCategoryShow","useState","TypeShow","setTypeShow","SizeShow","setSizeShow","ColorShow","setColorShow","selectedType","setSelectedType","selectedColor","setSelectedColor","selectedSize","setSelectedSize","filter","Setfilter","useContext","UserContext","_jsxs","className","children","_jsx","category","BiChevronDown","onClick","map","categoryItem","i","handleCategorySelect","item","typeItem","sizeItem","colorItem","type","id","htmlFor","brand","concat","checked","includes","onChange","updatedBrand","b","push","handleBrandSelect","_ref","product","API_BASE_URL","process","User","CartData","userid","_id","productid","UserCartMutation","useMutation","mutationFn","async","fetch","method","headers","body","JSON","stringify","json","onSuccess","console","log","onError","discountedPrice","discount","price","ActualPriceAfterDiscount","Math","floor","Link","to","src","images","alt","FontAwesomeIcon","icon","faCartShopping","mutate","faHeart","faMagnifyingGlassPlus","name","_Fragment","data","isLoading","error","useQuery","queryKey","queryFn","query","length","brandQuery","encodeURIComponent","join","response","ok","Error","message","AllProducts","Products","Header","CommonCategoryPage","CommonFilter","MenProduct","Footer"],"sourceRoot":""}