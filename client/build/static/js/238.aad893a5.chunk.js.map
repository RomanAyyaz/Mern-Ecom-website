{"version":3,"file":"static/js/238.aad893a5.chunk.js","mappings":"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","sources":["Components/Category/Baby/BabyProduct.jsx","Components/Category/Baby/Baby.jsx","Components/Category/CommonFilter.jsx"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCartShopping, faMagnifyingGlassPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport {useMutation} from '@tanstack/react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../../../Context/UserContext'\r\nfunction BabyProduct({product}) {\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n  const {User} = useContext(UserContext)\r\n  let CartData = {\r\n    userid:User._id,\r\n    productid:product._id\r\n  }\r\n  const UserCartApi = async (CartData)=>{\r\n    let response = await fetch(`${API_BASE_URL}/user/cart`,{\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(CartData)\r\n    })\r\n    return response.json()\r\n  }\r\n  const UserCartMutation = useMutation({\r\n    mutationFn:UserCartApi,\r\n    onSuccess:()=>{\r\n      console.log('Product added')\r\n    },\r\n    onError:()=>{\r\n      console.log('Some error occured in adding the product')\r\n    }\r\n  })\r\n  let discountedPrice = (product.discount/100)*product.price\r\n  let  ActualPriceAfterDiscount = Math.floor(product.price - discountedPrice)\r\n  return (\r\n    <Link to = {`/detail/${product._id}`}>\r\n    <div className='mt-10 relative group mx-2.5  cursor-pointer'>\r\n    <img src={`${API_BASE_URL}${product.images[0]}`} alt=\"\"  className='h-72 w-64' />\r\n    {\r\n      product.discount>0 ?\r\n      <div className='w-10 h-10 bg-primary text-white rounded-full text-sm absolute left-52 top-1'>\r\n       {product.discount}% off\r\n    </div>\r\n       : \"\"\r\n    }\r\n    <div className='bg-white mx-11 text-black absolute p-2.5 w-40 text-xl justify-around bottom-24 flex opacity-0 group-hover:opacity-100 transition-opacity duration-300 '>\r\n        <FontAwesomeIcon icon={faCartShopping}\r\n        onClick={()=>{\r\n          UserCartMutation.mutate(CartData)\r\n        }} \r\n         />\r\n        <FontAwesomeIcon icon={faHeart} />\r\n        <FontAwesomeIcon icon={faMagnifyingGlassPlus} />\r\n    </div>\r\n    <p className='text-lg m-2 hover:text-primary'>{product.name}</p>\r\n    <div className='flex justify-around items-center w-24 ml-20'>\r\n      {\r\n        product.discount > 0 ? (\r\n          <>\r\n          <p>$ {ActualPriceAfterDiscount}</p>\r\n          <p className='line-through text-neutral-500'>$ {product.price}</p>\r\n          </>\r\n        ) : <p className='text-lg hover:'>$ {product.price}.00</p>\r\n      }\r\n    </div>\r\n    </div>\r\n    </Link>\r\n    \r\n  )\r\n}\r\n\r\nexport default BabyProduct","import React ,{ useContext }from 'react'\r\nimport Header from '../../Header/Header'\r\nimport {useQuery} from '@tanstack/react-query'\r\nimport CommonCategoryPage from '../CommonCategoryPage'\r\nimport CommonFilter from '../CommonFilter'\r\nimport Footer from '../../Footer/Footer'\r\nimport { UserContext } from '../../../Context/UserContext'\r\nimport BabyProduct from './BabyProduct'\r\nfunction Baby() {\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n  const {filter} = useContext(UserContext)\r\n  const {data,isLoading,error} = useQuery({\r\n    queryKey:['product',filter],\r\n    queryFn:async ()=>{\r\n      let query = ''\r\n      if(filter.category){\r\n        query+=`?category=${filter.category}`\r\n      }\r\n      if (filter.brand.length > 0) {\r\n        const brandQuery = filter.brand.map((brand) => `brand=${encodeURIComponent(brand)}`).join('&');\r\n        query += query ? `&${brandQuery}` : `?${brandQuery}`;\r\n      }\r\n      let response = await fetch(`${API_BASE_URL}/user/men${query}`,{\r\n        method: 'Get'\r\n      })\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    }\r\n    \r\n  })\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  const AllProducts =data.Products\r\n  return (\r\n    <div>\r\n    <Header/>\r\n    <CommonCategoryPage data={'Baby'}/>\r\n    <div className='lg:flex'>\r\n    <CommonFilter/>\r\n    <div className='flex flex-col lg:flex-row py-8 justify-center items-center\r\n     lg:py-0 lg:justify-center lg:gap-3 lg:items-start lg:flex-wrap'>\r\n    {\r\n      AllProducts && AllProducts.length > 0?AllProducts.map((data,i)=>{\r\n        return(\r\n          <BabyProduct product = {data}/>\r\n        )\r\n      }):\"No data is availabe\"\r\n    }\r\n    </div>\r\n    </div>\r\n    <Footer/>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Baby","import React, { useContext, useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { UserContext } from '../../Context/UserContext';\r\n\r\nfunction CommonFilter() {\r\n  const [CategoryShow, setCategoryShow] = useState(false);\r\n  const [TypeShow, setTypeShow] = useState(false);\r\n  const [SizeShow, setSizeShow] = useState(false);\r\n  const [ColorShow, setColorShow] = useState(false);\r\n  const Category = ['shirt', 'pants', 'jeans', 'underwear', 'Category 5'];\r\n  const Type = ['Type 1', 'Type 2', 'Type 3', 'Type 4', 'Type 5'];\r\n  const Size = ['SM', 'MD', 'LG', 'XL', 'XXL'];\r\n  const Color = ['Red', 'Green', 'Blue', 'Black', 'Orange'];\r\n  const Brands = ['Zara', \"levi's\", 'Outfitter', 'Breakout'];\r\n  const [selectedType, setSelectedType] = useState('Type');\r\n  const [selectedColor, setSelectedColor] = useState('Color');\r\n  const [selectedSize, setSelectedSize] = useState('Size');\r\n\r\n  const { filter, Setfilter } = useContext(UserContext);\r\n\r\n  const handleCategorySelect = (item) => {\r\n    Setfilter({ ...filter, category: item });\r\n    setCategoryShow(false);\r\n  };\r\n\r\n  const handleBrandSelect = (brand) => {\r\n    let updatedBrand = [...filter.brand];\r\n    if (updatedBrand.includes(brand)) {\r\n      updatedBrand = updatedBrand.filter((b) => b !== brand);\r\n    } else {\r\n      updatedBrand.push(brand);\r\n    }\r\n    Setfilter({ ...filter, brand: updatedBrand });\r\n  };\r\n  return (\r\n    <div className='mx-3.5 w-96 border border-gray-400 h-auto mt-20 flex flex-col px-5 py-5 lg:mt-10 lg:ml-16 lg:w-[355px]'>\r\n      <div>\r\n        {/* Category Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{filter.category || 'Category'}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setCategoryShow(!CategoryShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          CategoryShow && <div className='z-50 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Category.map((categoryItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => handleCategorySelect(categoryItem)} key={i}>\r\n                  {categoryItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n        {/* Type Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{selectedType}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setTypeShow(!TypeShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          TypeShow && <div className='inset-0 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Type.map((typeItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => {\r\n                    setSelectedType(typeItem);\r\n                    setTypeShow(!TypeShow);\r\n                  }} key={i}>\r\n                  {typeItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n        {/* Size Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{selectedSize}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setSizeShow(!SizeShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          SizeShow && <div className='inset-0 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Size.map((sizeItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => {\r\n                    setSelectedSize(sizeItem);\r\n                    setSizeShow(!SizeShow);\r\n                  }} key={i}>\r\n                  {sizeItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n        {/* Color Section */}\r\n        <div className='my-4 flex justify-between items-center border border-gray-500 py-2 px-3.5 rounded-3xl'>\r\n          <h1>{selectedColor}</h1>\r\n          <BiChevronDown className='text-xl text-neutral-600' onClick={() => {\r\n            setColorShow(!ColorShow);\r\n          }} />\r\n        </div>\r\n        {\r\n          ColorShow && <div className='inset-0 text-start mt-[-11px] w-82 border border-gray-300'>\r\n            {\r\n              Color.map((colorItem, i) => (\r\n                <p className='py-2 px-3.5 block hover:bg-gray-100 mt-1'\r\n                  onClick={() => {\r\n                    setSelectedColor(colorItem);\r\n                    setColorShow(!ColorShow);\r\n                  }} key={i}>\r\n                  {colorItem}\r\n                </p>\r\n              ))\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n      {/* Filter By Genres Section */}\r\n      <div className=\"my-6\">\r\n        <h1 className='text-start font-medium'>Filter By Genres</h1>\r\n        <div className=\"flex flex-col space-y-4 mt-6 ml-3\">\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox1\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox1\" className=\"ml-2 font-normal text-gray-700\">\r\n              History\r\n            </label>\r\n          </div>\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox2\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox2\" className=\"ml-2 font-normal text-gray-700\">\r\n              Horror\r\n            </label>\r\n          </div>\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox3\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox3\" className=\"ml-2 text-gray-700\">\r\n              Biography\r\n            </label>\r\n          </div>\r\n          <div className=\"flex items-center my-1\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"checkbox4\"\r\n              className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n            />\r\n            <label htmlFor=\"checkbox4\" className=\"ml-2 text-gray-700\">\r\n              Science Fiction\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Filter By Brands Section */}\r\n      <div className=\"my-6\">\r\n        <h1 className='text-start font-medium'>Filter By Brands</h1>\r\n        <div className=\"flex flex-col space-y-4 mt-6 ml-3\">\r\n          {\r\n            Brands.map((brand, i) => (\r\n              <div className=\"flex items-center my-1\" key={i}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={`brandCheckbox${i}`}\r\n                  className=\"form-checkbox h-5 w-5 rounded-full text-primary checked:bg-primary\"\r\n                  checked={filter.brand.includes(brand)}  // Ensure checkbox state is controlled\r\n                  onChange={() =>{ \r\n                    handleBrandSelect(brand)\r\n\r\n                  }}\r\n                />\r\n                <label htmlFor={`brandCheckbox${i}`} className=\"ml-2 font-normal text-gray-700\">\r\n                  {brand}\r\n                </label>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommonFilter;\r\n"],"names":["_ref","product","API_BASE_URL","process","User","useContext","UserContext","CartData","userid","_id","productid","UserCartMutation","useMutation","mutationFn","async","fetch","concat","method","headers","body","JSON","stringify","json","onSuccess","console","log","onError","discountedPrice","discount","price","ActualPriceAfterDiscount","Math","floor","_jsx","Link","to","children","_jsxs","className","src","images","alt","FontAwesomeIcon","icon","faCartShopping","onClick","mutate","faHeart","faMagnifyingGlassPlus","name","_Fragment","filter","data","isLoading","error","useQuery","queryKey","queryFn","query","category","brand","length","brandQuery","map","encodeURIComponent","join","response","ok","Error","message","AllProducts","Products","Header","CommonCategoryPage","CommonFilter","i","BabyProduct","Footer","CategoryShow","setCategoryShow","useState","TypeShow","setTypeShow","SizeShow","setSizeShow","ColorShow","setColorShow","selectedType","setSelectedType","selectedColor","setSelectedColor","selectedSize","setSelectedSize","Setfilter","BiChevronDown","categoryItem","handleCategorySelect","item","typeItem","sizeItem","colorItem","type","id","htmlFor","checked","includes","onChange","updatedBrand","b","push","handleBrandSelect"],"sourceRoot":""}